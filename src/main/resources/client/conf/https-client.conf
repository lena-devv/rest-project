include "../application.conf"

com.epam.example {
  client {
    type = "https"
    url = "https://localhost:8080/event"
    method = "POST"

    # TLS Config
    tls_cert = "client/keys/self-signed-localhost.crt"

    # Custom params

    //      URL             string            `toml:"url"`
    //      Timeout         internal.Duration `toml:"timeout"`
    //      Method          string            `toml:"method"`
    //      Username        string            `toml:"username"`
    //      Password        string            `toml:"password"`
    //      Headers         map[string]string `toml:"headers"`
    //      ClientID        string            `toml:"client_id"`
    //      ClientSecret    string            `toml:"client_secret"`
    //      TokenURL        string            `toml:"token_url"`
    //      Scopes          []string          `toml:"scopes"`
    //      ContentEncoding string            `toml:"content_encoding"`


    #
    #   ## Optional TLS Config
    #   # tls_ca = "/etc/telegraf/ca.pem"
    #   # tls_cert = "/etc/telegraf/cert.pem"
    #   # tls_key = "/etc/telegraf/key.pem"


//    url = "http://127.0.0.1:8080/telegraf"
    #
    #   ## Timeout for HTTP message
    #   # timeout = "5s"
    #
    #   ## HTTP method, one of: "POST" or "PUT"
    #   # method = "POST"
    #
    #   ## HTTP Basic Auth credentials
    #   # username = "username"
    #   # password = "pa$$word"
    #
    #   ## OAuth2 Client Credentials Grant
    #   # client_id = "clientid"
    #   # client_secret = "secret"
    #   # token_url = "https://indentityprovider/oauth2/v1/token"
    #   # scopes = ["urn:opc:idm:__myscopes__"]
    #
    #   ## Optional TLS Config
    #   # tls_ca = "/etc/telegraf/ca.pem"
    #   # tls_cert = "/etc/telegraf/cert.pem"
    #   # tls_key = "/etc/telegraf/key.pem"
    #   ## Use TLS but skip chain & host verification
    #   # insecure_skip_verify = false
    #
    #   ## Data format to output.
    #   ## Each data format has it's own unique set of configuration options, read
    #   ## more about them here:
    #   ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_OUTPUT.md
    #   # data_format = "influx"
    #
    #   ## HTTP Content-Encoding for write request body, can be set to "gzip" to
    #   ## compress body or "identity" to apply no encoding.
    #   # content_encoding = "identity"
    #
    #   ## Additional HTTP headers
    #   # [outputs.http.headers]
    #   #   # Should be set manually to "application/json" for json data_format
    #   #   Content-Type = "text/plain; charset=utf-8"
  }
}